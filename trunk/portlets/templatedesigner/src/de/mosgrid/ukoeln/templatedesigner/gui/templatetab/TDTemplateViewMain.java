package de.mosgrid.ukoeln.templatedesigner.gui.templatetab;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbstractLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import de.mosgrid.ukoeln.templatedesigner.document.TDTemplateMainDocument;
import de.mosgrid.ukoeln.templatedesigner.gui.TDViewBase;

@SuppressWarnings("deprecation")
public class TDTemplateViewMain extends TDViewBase<TDTemplateMainDocument> {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout vlParser;
	@AutoGenerated
	private HorizontalLayout hlParser;
	@AutoGenerated
	private ComboBox cmbPort;
	@AutoGenerated
	private ComboBox cmbJob;
	@AutoGenerated
	private CheckBox chkHasParser;
	@AutoGenerated
	private TextArea txtaDescription;
	@AutoGenerated
	private TextField txtTitle;
	@AutoGenerated
	private Panel pnlWorkflow;
	@AutoGenerated
	private VerticalLayout vlWorkflow;
	@AutoGenerated
	private HorizontalLayout hlWorkflow2;
	@AutoGenerated
	private Button btnChange;
	@AutoGenerated
	private TextField txtDisplayname;
	@AutoGenerated
	private HorizontalLayout hlWorkflow1;
	@AutoGenerated
	private TextField txtNotes;
	@AutoGenerated
	private TextField txtWorkflow;

	private static final long serialVersionUID = 4421273616610710689L;
	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TDTemplateViewMain() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		setSizeFull();
	}
	
	@Override
	public AbstractLayout getMainLayout() {
		return mainLayout;
	}

	@Override
	protected void doInit() {
		pnlWorkflow.setScrollable(false);
		
		txtWorkflow.setValue(getDoc().getCurrentWorkflow());
		txtWorkflow.setEnabled(false);
		
		txtNotes.setValue(getDoc().getNotes());
		txtNotes.setEnabled(false);

		txtDisplayname.setValue(getDoc().getDisplayName());
		txtDisplayname.setEnabled(false);
		
		btnChange.addListener(new ClickListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				getDoc().openChangeDialog();
			}
		});
		
		txtTitle.setPropertyDataSource(getDoc().getTitleDataSource());
		txtaDescription.setPropertyDataSource(getDoc().getDescriptionDataSource());
		
		chkHasParser.setPropertyDataSource(getDoc().getHasParserDataSource());
		
		cmbJob.setNullSelectionAllowed(false);
		cmbJob.setContainerDataSource(getDoc().getJobsDataSource());
		cmbJob.setPropertyDataSource(getDoc().getSelectedJobDataSource());

		cmbPort.setNullSelectionAllowed(false);
		cmbPort.setContainerDataSource(getDoc().getPortsToJobDatasource());
		cmbPort.setPropertyDataSource(getDoc().getSelectedPortDataSource());
		updateToHasParser(chkHasParser.booleanValue());
	}

	public void updateToHasParser(boolean enabled) {
		cmbJob.setEnabled(enabled);
		cmbPort.setEnabled(enabled);
	}

	public void hideAllParserControls() {
		chkHasParser.setEnabled(false);
		cmbJob.setEnabled(false);
		cmbPort.setEnabled(false);
		
		chkHasParser.setVisible(false);
		cmbJob.setVisible(false);
		cmbPort.setVisible(false);	
	}

	@Override
	public String toString() {
		return "Maininfo";
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// pnlWorkflow
		pnlWorkflow = buildPnlWorkflow();
		mainLayout.addComponent(pnlWorkflow);
		mainLayout.setExpandRatio(pnlWorkflow, 0.3f);
		
		// txtTitle
		txtTitle = new TextField();
		txtTitle.setCaption("Title");
		txtTitle.setImmediate(true);
		txtTitle.setWidth("50.0%");
		txtTitle.setHeight("-1px");
		txtTitle.setSecret(false);
		mainLayout.addComponent(txtTitle);
		mainLayout.setExpandRatio(txtTitle, 0.1f);
		
		// txtaDescription
		txtaDescription = new TextArea();
		txtaDescription.setCaption("Description (Plaintext)");
		txtaDescription.setImmediate(false);
		txtaDescription.setWidth("100.0%");
		txtaDescription.setHeight("100.0%");
		mainLayout.addComponent(txtaDescription);
		mainLayout.setExpandRatio(txtaDescription, 0.4f);
		
		// vlParser
		vlParser = buildVlParser();
		mainLayout.addComponent(vlParser);
		mainLayout.setExpandRatio(vlParser, 0.2f);
		
		return mainLayout;
	}

	@AutoGenerated
	private Panel buildPnlWorkflow() {
		// common part: create layout
		pnlWorkflow = new Panel();
		pnlWorkflow.setCaption("Workflow Identification");
		pnlWorkflow.setImmediate(false);
		pnlWorkflow.setWidth("100.0%");
		pnlWorkflow.setHeight("100.0%");
		
		// vlWorkflow
		vlWorkflow = buildVlWorkflow();
		pnlWorkflow.setContent(vlWorkflow);
		
		return pnlWorkflow;
	}

	@AutoGenerated
	private VerticalLayout buildVlWorkflow() {
		// common part: create layout
		vlWorkflow = new VerticalLayout();
		vlWorkflow.setImmediate(false);
		vlWorkflow.setWidth("100.0%");
		vlWorkflow.setHeight("100.0%");
		vlWorkflow.setMargin(false);
		
		// hlWorkflow1
		hlWorkflow1 = buildHlWorkflow1();
		vlWorkflow.addComponent(hlWorkflow1);
		
		// hlWorkflow2
		hlWorkflow2 = buildHlWorkflow2();
		vlWorkflow.addComponent(hlWorkflow2);
		
		return vlWorkflow;
	}

	@AutoGenerated
	private HorizontalLayout buildHlWorkflow1() {
		// common part: create layout
		hlWorkflow1 = new HorizontalLayout();
		hlWorkflow1.setImmediate(false);
		hlWorkflow1.setWidth("100.0%");
		hlWorkflow1.setHeight("-1px");
		hlWorkflow1.setMargin(false);
		hlWorkflow1.setSpacing(true);
		
		// txtWorkflow
		txtWorkflow = new TextField();
		txtWorkflow.setCaption("Workflow");
		txtWorkflow.setImmediate(false);
		txtWorkflow.setWidth("100.0%");
		txtWorkflow.setHeight("-1px");
		txtWorkflow.setSecret(false);
		hlWorkflow1.addComponent(txtWorkflow);
		hlWorkflow1.setExpandRatio(txtWorkflow, 0.8f);
		
		// txtNotes
		txtNotes = new TextField();
		txtNotes.setCaption("Notes");
		txtNotes.setImmediate(false);
		txtNotes.setWidth("100.0%");
		txtNotes.setHeight("-1px");
		txtNotes.setSecret(false);
		hlWorkflow1.addComponent(txtNotes);
		hlWorkflow1.setExpandRatio(txtNotes, 0.8f);
		
		return hlWorkflow1;
	}

	@AutoGenerated
	private HorizontalLayout buildHlWorkflow2() {
		// common part: create layout
		hlWorkflow2 = new HorizontalLayout();
		hlWorkflow2.setImmediate(false);
		hlWorkflow2.setWidth("100.0%");
		hlWorkflow2.setHeight("-1px");
		hlWorkflow2.setMargin(false);
		hlWorkflow2.setSpacing(true);
		
		// txtDisplayname
		txtDisplayname = new TextField();
		txtDisplayname.setCaption("DisplayName");
		txtDisplayname.setImmediate(true);
		txtDisplayname.setWidth("100.0%");
		txtDisplayname.setHeight("-1px");
		txtDisplayname.setSecret(false);
		hlWorkflow2.addComponent(txtDisplayname);
		
		// btnChange
		btnChange = new Button();
		btnChange.setCaption("Change");
		btnChange.setImmediate(true);
		btnChange.setWidth("50.0%");
		btnChange.setHeight("-1px");
		hlWorkflow2.addComponent(btnChange);
		hlWorkflow2.setComponentAlignment(btnChange, new Alignment(24));
		
		return hlWorkflow2;
	}

	@AutoGenerated
	private VerticalLayout buildVlParser() {
		// common part: create layout
		vlParser = new VerticalLayout();
		vlParser.setImmediate(false);
		vlParser.setWidth("100.0%");
		vlParser.setHeight("100.0%");
		vlParser.setMargin(false);
		
		// chkHasParser
		chkHasParser = new CheckBox();
		chkHasParser.setCaption("Has Parser");
		chkHasParser.setImmediate(true);
		chkHasParser.setWidth("-1px");
		chkHasParser.setHeight("-1px");
		vlParser.addComponent(chkHasParser);
		vlParser.setExpandRatio(chkHasParser, 0.2f);
		
		// hlParser
		hlParser = buildHlParser();
		vlParser.addComponent(hlParser);
		vlParser.setExpandRatio(hlParser, 4.0f);
		
		return vlParser;
	}

	@AutoGenerated
	private HorizontalLayout buildHlParser() {
		// common part: create layout
		hlParser = new HorizontalLayout();
		hlParser.setImmediate(false);
		hlParser.setWidth("100.0%");
		hlParser.setHeight("100.0%");
		hlParser.setMargin(false);
		
		// cmbJob
		cmbJob = new ComboBox();
		cmbJob.setCaption("Job");
		cmbJob.setImmediate(true);
		cmbJob.setWidth("80.0%");
		cmbJob.setHeight("-1px");
		hlParser.addComponent(cmbJob);
		hlParser.setComponentAlignment(cmbJob, new Alignment(20));
		
		// cmbPort
		cmbPort = new ComboBox();
		cmbPort.setCaption("Port");
		cmbPort.setImmediate(true);
		cmbPort.setWidth("80.0%");
		cmbPort.setHeight("-1px");
		hlParser.addComponent(cmbPort);
		hlParser.setComponentAlignment(cmbPort, new Alignment(20));
		
		return hlParser;
	}
}
