package de.mosgrid.ukoeln.templatedesigner.gui.templatetab;

import java.util.Hashtable;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbstractLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.VerticalLayout;

import de.mosgrid.msml.enums.Namespaces;
import de.mosgrid.msml.util.IDictionary;
import de.mosgrid.ukoeln.templatedesigner.document.IPropertyBean;
import de.mosgrid.ukoeln.templatedesigner.document.PropertyBean;
import de.mosgrid.ukoeln.templatedesigner.document.TDTemplateJobDocument;
import de.mosgrid.ukoeln.templatedesigner.gui.TDViewBase;
import de.mosgrid.ukoeln.templatedesigner.gui.util.TDTableComponent;
import de.mosgrid.ukoeln.templatedesigner.gui.util.TDTableFieldFactory;

public class TDJobPartEnvironment extends TDViewBase<TDTemplateJobDocument> {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private TDTableComponent tblParams;
	@AutoGenerated
	private CheckBox chkHasEnv;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static Hashtable<String, String> _comp2Val;

	private static final long serialVersionUID = 3844597982430879125L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TDJobPartEnvironment() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		initComp2Val();
	}

	@Override
	public AbstractLayout getMainLayout() {
		return mainLayout;
	}

	private void initComp2Val() {
		if (_comp2Val != null)
			return;
		_comp2Val = new Hashtable<String, String>();
		// _comp2Val.put(txtCores.getCaption(), "8");
		// _comp2Val.put(txtMemory.getCaption(), "2000");
		// _comp2Val.put(txtNodes.getCaption(), "1");
		// _comp2Val.put(txtWalltime.getCaption(), "100");
	}

	@Override
	protected void doInit() {
		chkHasEnv.setPropertyDataSource(getDoc().getHasEnvProperty());
		chkHasEnv.addListener(new ValueChangeListener() {

			private static final long serialVersionUID = 2390169365969458424L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				updateHasEnv();
			}
		});

		updateHasEnv();

		initTable();
	}

	private void initTable() {
		tblParams.init(getDoc().getEnvironmentDataSource(), getDoc(), new Object[] { PropertyBean.INDEX_PROPID,
				PropertyBean.REF_PROPID, PropertyBean.VAL_PROPID, PropertyBean.EDIT_PROPID });
		
		tblParams.addRemoveListener(new ClickListener() {

			private static final long serialVersionUID = -9189048059088157604L;

			@Override
			public void buttonClick(ClickEvent event) {
				getDoc().removeEnvProp((IPropertyBean) tblParams.getValue());
			}
		});

		tblParams.addAddListener(new ClickListener() {

			private static final long serialVersionUID = -9189048059088157604L;

			@Override
			public void buttonClick(ClickEvent event) {
				getDoc().addNewEnvProp();
			}
		});
	}

	private void updateHasEnv() {
		tblParams.setEnabled((Boolean) getDoc().getHasEnvProperty().getValue());
	}

	public void refreshEnvironmentTable() {
		tblParams.refreshRowCache();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// chkHasEnv
		chkHasEnv = new CheckBox();
		chkHasEnv.setCaption("Has Environment");
		chkHasEnv.setImmediate(true);
		chkHasEnv.setWidth("-1px");
		chkHasEnv.setHeight("-1px");
		mainLayout.addComponent(chkHasEnv);

		// tblParams
		tblParams = new TDTableComponentEnvImpl();
		tblParams.setWidth("100.0%");
		tblParams.setHeight("100.0%");
		mainLayout.addComponent(tblParams);
		mainLayout.setExpandRatio(tblParams, 1.0f);

		return mainLayout;
	}
	
	@SuppressWarnings("serial")
	public class TDTableComponentEnvImpl extends TDTableComponent {

		@Override
		protected TableFieldFactory getTDTableFieldFactory(TDTemplateJobDocument doc) {
			return new TDTableFieldFactory(doc) {
				
				@Override
				protected BeanItemContainer<IDictionary> getInternalDictionaryDataSource(TDTemplateJobDocument doc) {
					return null;
				}
				
				@Override
				protected BeanItemContainer<String> getInternalDictRefDataSource(TDTemplateJobDocument doc, IDictionary iDictionary) {
					return doc.getRefsToDict(Namespaces.ENVIRONMENT);
				}
			};
		}

	}
}
