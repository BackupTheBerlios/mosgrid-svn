package de.mosgrid.ukoeln.templatedesigner.gui.util;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Container;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.VerticalLayout;

import de.mosgrid.ukoeln.templatedesigner.document.PropertyBean;
import de.mosgrid.ukoeln.templatedesigner.document.TDTemplateJobDocument;

public abstract class TDTableComponent extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout hlButtons;
	@AutoGenerated
	private Button btnRemove;
	@AutoGenerated
	private Button btnAdd;
	@AutoGenerated
	private TDTableImpl tblTable;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = -6499072568915138577L;
	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TDTableComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		btnRemove.setEnabled(false);
	}

	public void init(Container dataSource, TDTemplateJobDocument doc, Object[] visProps) {
		tblTable.init(dataSource, doc, visProps);
		tblTable.addListener(new ValueChangeListener() {

			private static final long serialVersionUID = -6688379596348739901L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				btnRemove.setEnabled(tblTable.getValue() != null);
			}
		});
	}

	public void addRemoveListener(ClickListener clickListener) {
		btnRemove.addListener(clickListener);
	}

	public void addAddListener(ClickListener clickListener) {
		btnAdd.addListener(clickListener);
	}

	public void refreshRowCache() {
		tblTable.refreshRowCache();
	}

	public Object getValue() {
		return tblTable.getValue();
	}

	public class TDTableImpl extends TDTable {

		private static final long serialVersionUID = 1L;

		@Override
		protected TableFieldFactory getTableFieldFactory_internal(TDTemplateJobDocument doc) {
			return getTDTableFieldFactory(doc);
		}

		@Override
		protected void setHeaders() {
			setTDTableHeaders(this);
		}
		
	}
	
	protected abstract TableFieldFactory getTDTableFieldFactory(TDTemplateJobDocument doc);

	protected void setTDTableHeaders(TDTableImpl tdTableImpl) {
		tdTableImpl.setColumnHeader(PropertyBean.INDEX_PROPID, "");
		tdTableImpl.setColumnHeader(PropertyBean.REF_PROPID, "Reference");
		tdTableImpl.setColumnHeader(PropertyBean.VAL_PROPID, "Value");
		tdTableImpl.setColumnHeader(PropertyBean.EDIT_PROPID, "User-Editable");
	}

	public void setAddButtonEnabled(boolean addEnabled) {
		btnAdd.setEnabled(addEnabled);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// tblTable
		tblTable = new TDTableImpl();
		tblTable.setImmediate(false);
		tblTable.setWidth("100.0%");
		tblTable.setHeight("100.0%");
		mainLayout.addComponent(tblTable);
		mainLayout.setExpandRatio(tblTable, 0.8f);
		
		// hlButtons
		hlButtons = buildHlButtons();
		mainLayout.addComponent(hlButtons);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHlButtons() {
		// common part: create layout
		hlButtons = new HorizontalLayout();
		hlButtons.setImmediate(false);
		hlButtons.setWidth("100.0%");
		hlButtons.setHeight("-1px");
		hlButtons.setMargin(false);
		
		// btnAdd
		btnAdd = new Button();
		btnAdd.setCaption("Add");
		btnAdd.setImmediate(true);
		btnAdd.setWidth("-1px");
		btnAdd.setHeight("-1px");
		hlButtons.addComponent(btnAdd);
		hlButtons.setComponentAlignment(btnAdd, new Alignment(34));
		
		// btnRemove
		btnRemove = new Button();
		btnRemove.setCaption("Remove");
		btnRemove.setImmediate(true);
		btnRemove.setWidth("-1px");
		btnRemove.setHeight("-1px");
		hlButtons.addComponent(btnRemove);
		hlButtons.setComponentAlignment(btnRemove, new Alignment(33));
		
		return hlButtons;
	}
}
