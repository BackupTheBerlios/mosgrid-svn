<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.xml-cml.org/schema/cmlx"
	elementFormDefault="qualified"
	xmlns="http://www.xml-cml.org/schema/cmlx"
	xmlns:h="http://www.w3.org/1999/xhtml" id="cmlx" 
	xmlns:pref="http://www.xml-cml.org/schema">

	<xsd:import schemaLocation="cml_clean_extend.xsd" namespace="http://www.xml-cml.org/schema"></xsd:import>
	
	<!-- DICTIONARY  -->
	
	<!-- can be used to restrict the values of parameters specified in dictionary entries -->
	<xsd:element name="restriction" id="dict.restriction">
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="title" type="xsd:string"
						id="dict.restriction.title" />
					<xsd:attribute name="id" type="xsd:string"
						id="dict.restriction.id" />
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<!-- This attribute can be used for dictionary entries which represent a flag parameter i.e. a cmd line argument without value -->
	<xsd:attributeGroup id="attGp.flag" name="flag">
		<xsd:attribute name="flag" type="xsd:boolean" id="att.flag" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- MSML TEMPLATE  -->
	
	<!-- workflow notes of a gUSE workflow to identify it correctly -->
	<xsd:attributeGroup id="attGp.workflowNotes" name="workflowNotes">
		<xsd:attribute id="att.workflowNotes" name="workflowNotes" type="xsd:string" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- template display name -->
	<xsd:attributeGroup id="attGp.displayName" name="displayName">
		<xsd:attribute id="att.displayName" name="displayName"
			form="qualified">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="[a-zA-Z0-9_\.\-]+"></xsd:pattern>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:attributeGroup>
	
	<!-- Name of the workflow graph image (Searched in TOMCAT/webapps/ROOT/html/VAADIN/themes/PortletAPI/DOMAIN/workflows/) -->
	<xsd:attributeGroup id="attGp.workflowGraph" name="workflowGraph">
			<xsd:attribute id="att.workflowGraph" name="workflowGraph" type="xsd:string" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- adapter config block -->
	<xsd:element name="adapterConfiguration" type="adapterConfigType"></xsd:element>
	<xsd:complexType name="adapterConfigType">
		<xsd:complexContent>
			<xsd:extension base="pref:parameterListType">
				<xsd:attribute name="adapterID"
					type="pref:namespaceRefType" use="required">
				</xsd:attribute>
				<xsd:attribute name="portName" type="xsd:string"
					use="optional">
				</xsd:attribute>
				<xsd:attribute name="fileExtension" use="optional">
					<xsd:simpleType>
						<xsd:restriction base="xsd:string">
							<xsd:pattern value="[^\.]\w*"></xsd:pattern>
						</xsd:restriction>
					</xsd:simpleType>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- parser config block -->
	<xsd:element name="parserConfiguration" type="parserConfigType"></xsd:element>
	<xsd:complexType name="parserConfigType">
		<xsd:complexContent>
			<xsd:extension base="pref:parameterListType"></xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	
	<!-- can be used below an initialization element of a job to register uploads -->
	<xsd:element name="uploadList" id="init.uploads">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="moleculeUpload" type="moleculeUploadType" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="jobInputUpload" type="jobInputUploadType" minOccurs="0" maxOccurs="unbounded"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- upload element for job input files -->
	<xsd:complexType name="jobInputUploadType">
		<xsd:complexContent>
			<xsd:extension base="fileUpload"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- upload element for molecule files -->
	<xsd:complexType name="moleculeUploadType">
		<xsd:complexContent>
			<xsd:extension base="fileUpload"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- upload element base element -->
	<xsd:complexType name="fileUpload">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<!-- the file type e.g. 'pdb' or 'tpr' -->
				<xsd:attribute name="fileType" type="xsd:string" />
				<xsd:attribute name="port" type="xsd:string" />
				<!-- can be linked to other jobs -->
				<xsd:attribute name="job" type="xsd:string" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	
	<!-- indicates if a parameter shall be user-editable or not -->
	<xsd:attributeGroup id="attGp.plainText" name="plainText">
		<xsd:attribute name="plainText" type="xsd:string" id="att.plainText" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- indicates if a parameter shall be user-editable or not -->
	<xsd:attributeGroup id="attGp.editable" name="editable">
		<xsd:attribute name="editable" type="xsd:boolean" id="att.editableParameter" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- indicates if a parameter shall be optional or not -->
	<xsd:attributeGroup id="attGp.optional" name="optional">
		<xsd:attribute name="optional" type="xsd:boolean" id="att.optionalParameter" form="qualified" />
	</xsd:attributeGroup>

	<!-- This attribute specifies the toolsuite the template belongs to -->
	<xsd:attributeGroup id="attGp.toolsuite" name="toolsuite">
		<xsd:attribute name="toolsuite" type="xsd:string" id="att.toolsuite" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- the origin format of a molecule element e.g. pdb, sdf, etc-->
	<xsd:attributeGroup id="attGp.originformat" name="origin">
		<xsd:attribute name="origin" type="originType" id="att.originformat" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="originType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="pdb" />
			<xsd:enumeration value="gro" />
			<xsd:enumeration value="sdf" />
			<xsd:enumeration value="mol" />
			<xsd:enumeration value="cif" />
			<xsd:enumeration value="custom" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<!-- the type of molecule element-->
	<xsd:attributeGroup id="attGp.moleculeClass" name="moleculeClass">
		<xsd:attribute name="moleculeClass" type="moleculeClassType" id="att.moleculeClass" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="moleculeClassType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Model" />
			<xsd:enumeration value="Chain" />
			<xsd:enumeration value="AminoAcid" />
			<xsd:enumeration value="Nucleotide" />
			<xsd:enumeration value="Hetero" />
			<xsd:enumeration value="MoleculeList" />
		</xsd:restriction>
	</xsd:simpleType>
	
	<!-- custom properties, mainly used as child element for molecules-->
	<xsd:element name="customProperty" id="element.customProperty" >
		<xsd:complexType>
			<xsd:simpleContent>
				<xsd:extension base="xsd:string">
					<xsd:attribute name="key" type="xsd:string"/>
					<xsd:attributeGroup ref="pref:dataType"/>
				</xsd:extension>
			</xsd:simpleContent>
		</xsd:complexType>
	</xsd:element>
	
	<!-- velocity of an atom -->
	<xsd:attributeGroup id="attGp.atomVelocity" name="atomVelocities">
		<xsd:attribute name="vX" type="xsd:double" id="att.atomVelocityX" form="qualified" />
		<xsd:attribute name="vY" type="xsd:double" id="att.atomVelocityY" form="qualified" />
		<xsd:attribute name="vZ" type="xsd:double" id="att.atomVelocitZ" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- alternative location indicator of an atom -->
	<xsd:attributeGroup name="altLoc" id="attGp.altLoc">
		<xsd:attribute name="altLoc" type="xsd:string" id="att.altLoc" form="qualified" />
	</xsd:attributeGroup>
	
	<!-- A custom id because CML id's must start with a literal. Mainly used for molecules and atoms. -->
	<xsd:attributeGroup name="customId" id="attGp.customId">
		<xsd:attribute name="customId" type="xsd:string" id="att.customId" form="qualified" />
	</xsd:attributeGroup>
	
	

	




	<!-- 		THE FOLLOWING ENTRIES ARE DEPRECATED 		-->
	
	<!-- reference to a file (replaced by origin) -->
	<xsd:attributeGroup id="attGp.fileRef" name="fileRef">
		<xsd:attribute id="att.fileRef" name="fileRef" type="xsd:string"
			form="qualified" />
	</xsd:attributeGroup>

	<!-- the ID of a residue -->
	<xsd:attributeGroup id="attGp.residueNumber" name="residueNumber">
		<xsd:attribute name="residueNumber" type="xsd:string" id="att.residueNumber" form="qualified" />
	</xsd:attributeGroup>

	<!-- the name of a residue -->
	<xsd:attributeGroup name="residueName" id="attGp.residueName">
		<xsd:attribute name="residueName" type="xsd:string" id="att.residueName" form="qualified" />
	</xsd:attributeGroup>

	<!-- the name of a chain -->
	<xsd:attributeGroup name="chainName" id="attGp.chainName">
		<xsd:attribute name="chainName" type="xsd:string" id="att.chainName" form="qualified" />
	</xsd:attributeGroup>

	<!-- the name of an atom -->
	<xsd:attributeGroup name="atomName" id="attGp.atomName">
		<xsd:attribute name="atomName" type="xsd:string" id="att.atomName" form="qualified" />
	</xsd:attributeGroup>

	<!-- alt loc array -->
	<xsd:attributeGroup id="attGp.altLocArray" name="altLocArray">
		<xsd:attribute id="att.altLocArray" name="altLoc"
			type="altLocArrayType" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="altLocArrayType" id="st.altLocArrayType">
		<xsd:list itemType="xsd:string" />
	</xsd:simpleType>

	<xsd:attributeGroup id="attGp.residueNumberArray"
		name="residueNumberArray">
		<xsd:attribute id="att.residueNumberArray" name="residueNumber"
			type="residueNumberArrayType" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="residueNumberArrayType"
		id="st.residueNumberArrayType">
		<xsd:list itemType="xsd:string" />
	</xsd:simpleType>

	<xsd:attributeGroup id="attGp.residueNameArray"
		name="residueNameArray">
		<xsd:attribute id="att.residueNameArray" name="residueName"
			type="residueNameArrayType" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="residueNameArrayType"
		id="st.residueNameArrayType">
		<xsd:list itemType="xsd:string" />
	</xsd:simpleType>

	<xsd:attributeGroup id="attGp.chainNameArray"
		name="chainNameArray">
		<xsd:attribute id="att.chainNameArray" name="chainName"
			type="chainNameArrayType" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="chainNameArrayType"
		id="st.chainNameArrayType">
		<xsd:list itemType="xsd:string" />
	</xsd:simpleType>

	<xsd:attributeGroup id="attGp.atomNameArray" name="atomNameArray">
		<xsd:attribute id="att.atomNameArray" name="atomName"
			type="atomNameArrayType" form="qualified" />
	</xsd:attributeGroup>
	<xsd:simpleType name="atomNameArrayType"
		id="st.atomNameArrayType">
		<xsd:list itemType="xsd:string" />
	</xsd:simpleType>
</xsd:schema>
