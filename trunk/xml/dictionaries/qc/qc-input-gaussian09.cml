<?xml version="1.0" encoding="UTF-8" ?>
<cml:dictionary xmlns:cml="http://www.xml-cml.org/schema"
	xmlns:convention="http://www.xml-cml.org/convention/" xmlns:unit="http://www.xml-cml.org/unit/nonSi/"
	xmlns:unitType="http://www.xml-cml.org/unit/unitType/" xmlns:si="http://www.xml-cml.org/unit/si/"
	xmlns:nonSi="http://www.xml-cml.org/unit/nonSi/" xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
	xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:dc="http://purl.org/dc/elements/1.1/" convention="convention:dictionary"
	title="cml:description for Quantum Chemistry Simulations with the Gaussian 09 software."
	namespace="http://www.xml-cml.org/dictionary/qc-gaussian-09/"
	dictionaryPrefix="g09" cmlx:toolsuite="Gaussian 09">

	<dc:author>Sebastian Breuers</dc:author>
	<dc:author>Klaus-Dieter Warzecha</dc:author>
	<dc:author>Martin Kruse</dc:author>

	<cml:description>
		<xhtml:p>
			Quantum Chemistry Dictionary for calculations with Gaussian09.
		</xhtml:p>
	</cml:description>

	<cml:entry id="spin" term="spin" title="Spin" dataType="xsd:integer"
		unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TODO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Spin
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="formal.charge" term="formal.charge" title="Formal charge"
		dataType="xsd:integer" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				Total charge of the molecule
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Total charge of the molecule
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="scf.energy" term="scf.energy" title="SCF Energy"
		dataType="xsd:decimal" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				This is the SCF energy calculated by gaussian optimisation.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				SCF Energy of the optimized molecule.
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="total.energy" term="total.energy" title="Total Energy"
		dataType="xsd:decimal" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				This is the total energy calculated by gaussian
				optimisation.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Total Energy of the optimized molecule. In most cases, total
				energy and SCF energy are seemingly identical.
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="nprocshared" term="nprocshared" title="NProc Shared"
		dataType="xsd:integer" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TODO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				SMP parallel processes. Number of cores used on ONE node
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="lindaworker" term="lindaworker" title="Lindaworker"
		dataType="xsd:integer" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TODO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Multicore parallel processing. List of LINDA working nodes
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="loglevel" term="loglevel" title="Loglevel"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TODO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Loglevel for gaussian.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="loglevel.normal" title="normal">n</cmlx:restriction>
		<cmlx:restriction id="loglevel.precise" title="precise">p</cmlx:restriction>
		<cmlx:restriction id="loglevel.terse" title="terse">t</cmlx:restriction>
	</cml:entry>

	<cml:entry id="checkpointfile" term="checkpointfile" title="CheckpointFileName"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				This is the name of the checkpointfile. It must be equal to the
				outputports name if it is used as outputfile.
				It may not be
				usereditable.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				This is the name of the checkpointfile. It must be equal to the
				outputports name if it is used as outputfile.
				It may not be
				usereditable.
			</xhtml:p>
		</cml:description>
	</cml:entry>

	<cml:entry id="jobtype" term="jobtype" title="Job Type"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				The type of the specified job.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				This cml:entry specifies which quantum chemical operation
				should be
				performed with the given model chemistry.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="jobtype.sp" title="Single point">sp</cmlx:restriction>
		<cmlx:restriction id="jobtype.min" title="Minimisation">opt</cmlx:restriction>
		<cmlx:restriction id="jobtype.freq" title="Frequency">freq</cmlx:restriction>
		<cmlx:restriction id="jobtype.nmr" title="NMR shielding">nmr</cmlx:restriction>
		<cmlx:restriction id="jobtype.scrf" title="Solvation">scrf</cmlx:restriction>
		<cmlx:restriction id="jobtype.td" title="Excited state">td</cmlx:restriction>
                <cmlx:restriction id="jobtype.optfreq" title="Optimizing and Frequency">opt freq</cmlx:restriction>
	</cml:entry>

	<cml:entry id="method" term="method" title="Quantum Chemical Method"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				The quantum chemical method that should be applied.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				In a quantum chemical model chemistry different levels of
				theory can
				be used. Hartree-Fock (HF), Densitiy Functional Theory
				(DFT), or 2nd
				order Moeller-Plesset Perturbation Theory (MP2) are
				some examples.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="method.hf" title="Hartree-Fock">HF</cmlx:restriction>
		<cmlx:restriction id="method.dft" title="Density Functional Theory">dft</cmlx:restriction>
		<cmlx:restriction id="method.mp2" title="MP2">mp2</cmlx:restriction>
	</cml:entry>

	<cml:entry id="hf.theory" term="hf.theory" title="HF theory"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				The theory used in Hartree-Fock calculations.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				The theory to handle closed and open shell systems.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="hf.theory.hf" title="HF">hf</cmlx:restriction>
		<cmlx:restriction id="hf.theory.rhf" title="RHF">rhf</cmlx:restriction>
		<cmlx:restriction id="hf.theory.uhf" title="UHF">uhf</cmlx:restriction>
		<cmlx:restriction id="hf.theory.rohf" title="ROHF">rohf</cmlx:restriction>
	</cml:entry>

	<cml:entry id="dft.functional" term="dft.functional" title="Functional"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				The functional used in DFT calculation.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				The functional that maps beetween energy and electron
				density.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="dft.functional.b3lyp" title="B3LYP">b3lyp</cmlx:restriction>
		<cmlx:restriction id="dft.functional.b3pw91" title="B3PW91">b3pw91</cmlx:restriction>
		<cmlx:restriction id="dft.functional.blyp" title="BLYP">blyp</cmlx:restriction>
		<cmlx:restriction id="dft.functional.b3p86" title="B3P86">b3p86</cmlx:restriction>
		<cmlx:restriction id="dft.functional.b97d" title="B97D">b97d</cmlx:restriction>
		<cmlx:restriction id="dft.functional.pw91" title="PW91">pw91</cmlx:restriction>
	</cml:entry>

	<cml:entry id="dft.grid" term="Grid" title="Integration Grid"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				Integration grid used in DFT.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				In Density Functional Theory an integration grid is used to
				determine
				the electron density at certain points in space.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="dft.grid.coarse" title="Coarse">coarse</cmlx:restriction>
		<cmlx:restriction id="dft.grid.fine" title="Fine">fine</cmlx:restriction>
		<cmlx:restriction id="dft.grid.ultrafine" title="Ultrafine">ultrafine</cmlx:restriction>
	</cml:entry>

	<cml:entry id="basisset" term="basisset" title="Basis Set"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				Basis set used to describe orbitals on atoms.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Basis sets describe atom orbitals. There different types of
				basis sets
				that are suitable for different types of problems.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="basisset.3-21G" title="3-21G">3-21G</cmlx:restriction>
		<cmlx:restriction id="basisset.3-21_plus_G" title="3-21+G">3-21+G</cmlx:restriction>
		<cmlx:restriction id="basisset.3-21_plus_G_d_" title="3-21+G*">3-21+G*</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31G" title="6-31G">6-31G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31G_d_" title="6-31G*">6-31G(d)</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31_plus_G" title="6-31+G">6-31+G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31_plusplus_G"
			title="6-31++G">6-31++G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31_plusplus_G_d_"
			title="6-31++G*">6-31++G(d)</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31_plusplus_G_dp_"
			title="6-31++G(d,p)">6-31++G(d,p)</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311G" title="6-311G">6-311G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-31G_dp_" title="6-31G**">6-31G(d,p)</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311G" title="6-311G">6-311G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311G" title="6-311G">6-311G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311_plus_G" title="6-311+G">6-311+G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311_plusplus_G"
			title="6-311++G">6-311++G</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311_plusplus_G_d_"
			title="6-311++G*">6-311++G(d)</cmlx:restriction>
		<cmlx:restriction id="basisset.6-311_plusplus_G_dp_"
			title="6-311++G**">6-311++G(d,p)</cmlx:restriction>
		<cmlx:restriction id="basisset.D95V" title="D95V">D95V</cmlx:restriction>
		<cmlx:restriction id="basisset.D95V_plus_d_" title="D95V+(d)">D95V+(d)</cmlx:restriction>
		<cmlx:restriction id="basisset.D95V_plus_dp_" title="D95V+(d,p)">D95V+(d,p)</cmlx:restriction>
		<cmlx:restriction id="basisset.D95V_plusplus_" title="D95V++">D95V++</cmlx:restriction>
		<cmlx:restriction id="basisset.D95V_plusplus_dp_" title="D95V++(d,p)">D95V++(d,p)</cmlx:restriction>
		<cmlx:restriction id="basisset.D95" title="D95">D95</cmlx:restriction>
		<cmlx:restriction id="basisset.D95_plus_d_" title="D95+(d)">D95+(d)</cmlx:restriction>
		<cmlx:restriction id="basisset.D95_plus_dp_" title="D95+(d,p)">D95+(d,p)</cmlx:restriction>
		<cmlx:restriction id="basisset.D95_plusplus_" title="D95++">D95++</cmlx:restriction>
		<cmlx:restriction id="basisset.cc-pVDZ" title="cc-pVDZ">cc-pVDZ</cmlx:restriction>
		<cmlx:restriction id="basisset.cc-pVTZ" title="cc-pVTZ">cc-pVTZ</cmlx:restriction>
		<cmlx:restriction id="basisset.cc-pVQZ" title="cc-pVQZ">cc-pVQZ</cmlx:restriction>
		<cmlx:restriction id="basisset.AUG-cc-pVDZ" title="AUG-cc-pVDZ">AUG-cc-pVDZ</cmlx:restriction>
		<cmlx:restriction id="basisset.AUG-cc-pVTZ" title="AUG-cc-pVTZ">AUG-cc-pVTZ</cmlx:restriction>
		<cmlx:restriction id="basisset.AUG-cc-pVQZ" title="AUG-cc-pVQZ">AUG-cc-pVQZ</cmlx:restriction>
		<cmlx:restriction id="basisset.SV" title="SV">SV</cmlx:restriction>
		<cmlx:restriction id="basisset.SVP" title="SVP">SVP</cmlx:restriction>
		<cmlx:restriction id="basisset.TZV" title="TZV">TZV</cmlx:restriction>
		<cmlx:restriction id="basisset.TZVP" title="TZVP">TZVP</cmlx:restriction>
	</cml:entry>



	<cml:entry id="cube.kind" term="cube.kind" title="Property fo visualize in cube file"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				Kind of molecular property to be visualized in a cube file.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				The cubegen tool from the Gaussian suite allows to visualize various molecular properties, such as
				molecular orbitals (single and groups, e.g. all valence or virtual orbitals), density, spin density,
                                electrostatic potential, etc., in cube files.
				The property to be visualized is defined here.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="cube.kind.mo.homo" title="HOMO">mo=homo</cmlx:restriction>
		<cmlx:restriction id="cube.kind.mo.lumo" title="LUMO">mo=lumo</cmlx:restriction>
		<cmlx:restriction id="cube.kind.mo.all" title="all molecular orbitals">mo=all</cmlx:restriction>
		<cmlx:restriction id="cube.kind.mo.valence" title="all valence orbitals">mo=valence</cmlx:restriction>
		<cmlx:restriction id="cube.kind.mo.virtual" title="all virtual orbitals">mo=virtual</cmlx:restriction>
		<cmlx:restriction id="cube.kind.mo.occa" title="all occupied alpha orbitals">mo=occa</cmlx:restriction>
		<cmlx:restriction id="cube.kind.mo.occb" title="all occupied beta orbitals">mo=occb</cmlx:restriction>
		<cmlx:restriction id="cube.kind.density.scf" title="total SCF density">density=scf</cmlx:restriction>
		<cmlx:restriction id="cube.kind.spin" title="difference of alpha and beta spin densities">spin</cmlx:restriction>
		<cmlx:restriction id="cube.kind.spin.alpha" title="alpha spin density">alpha</cmlx:restriction>
		<cmlx:restriction id="cube.kind.spin.beta" title="beta spin density">beta</cmlx:restriction>
		<cmlx:restriction id="cube.kind.potential" title="electrostatic potential">potential</cmlx:restriction>
		<cmlx:restriction id="cube.kind.gradient" title="density and gradient">gradient</cmlx:restriction>
		<cmlx:restriction id="cube.kind.laplacian" title="laplacian of gradient">beta</cmlx:restriction>
	</cml:entry>


	<cml:entry id="cube.memory" term="cube.memory" title="Memory to allocate for cube file generation"
		dataType="xsd:integer" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				Nowadays ignored. Fixed to ZERO.
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Previously this parameter was used to specify the amount of memory to allocate. 
                                It is now ignored, and the GAUSS_MEMDEF environment variable is used.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="cube.memory.default" title="default">0</cmlx:restriction>
	</cml:entry>



	<cml:entry id="cube.npts" term="cube.npts" title="Number of points per side of grid"
		dataType="xsd:integer" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TO DO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
                                Number of points per side in the cube. A value of 0 selects the default value of 80^3 points distributed evenly over a 
                                rectangular grid generated automatically by the program (not necessarily a cube). Positive values of npts similarly 
                                specify the number of points per “side”; e.g., 100 specified a grid of 1,000,000 (100^3) points.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="cube.npts.default" title="default">0</cmlx:restriction>
	</cml:entry>

	<cml:entry id="cube.format" term="cube.format" title="Format of cube file"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TO DO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
	               Format of formatted output files: 
	               h means include header (this is the default); 
	               n means don’t include header. 
	               This parameter is ignored when unformatted cube files are produced.
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="cube.format.header" title="with header">h</cmlx:restriction>
		<cmlx:restriction id="cube.format.noheader" title="without header">n</cmlx:restriction>
	</cml:entry>

	<cml:entry id="nomolecule" term="nomolecule" title="No Molecule"
		dataType="xsd:boolean" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TODO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Spin
			</xhtml:p>
		</cml:description>
	</cml:entry>
	
	<cml:entry id="scrf-solvant" term="scrf-solvant" title="Solvant model for gaussian"
		dataType="xsd:string" unitType="unitType:none" units="si:none">
		<cml:definition>
			<xhtml:p>
				TODO
			</xhtml:p>
		</cml:definition>
		<cml:description>
			<xhtml:p>
				Spin
			</xhtml:p>
		</cml:description>
		<cmlx:restriction id="scrf-ethanol" title="Ethanol">Ethanol</cmlx:restriction>
		<cmlx:restriction id="scrf-methanol" title="Methanol">Methanol</cmlx:restriction>
		<cmlx:restriction id="scrf-water" title="Water">Water</cmlx:restriction>
	</cml:entry>

	<!-- <cml:entry id="calctype" term="calctype" title="Type of Gaussian calculation" 
		dataType="xsd:string" unitType="unitType:none" units="si:none"> <cml:definition> 
		<xhtml:p> Type of Gaussian calculation. </xhtml:p> </cml:definition> <cml:description> 
		<xhtml:p> The type of Gaussian calculation, as given abbreviated in the formatted 
		checkpoint file. </xhtml:p> </cml:description> </cml:entry> -->

	<!-- <cml:entry id="routecard" term="routecard" title="route card" dataType="xsd:string" 
		unitType="unitType:none" units="si:none"> <cml:definition> <xhtml:p> Route 
		card of Gaussian calculation. </xhtml:p> </cml:definition> <cml:description> 
		<xhtml:p> Route card of Gaussian calculation. </xhtml:p> </cml:description> 
		</cml:entry> -->

</cml:dictionary>
