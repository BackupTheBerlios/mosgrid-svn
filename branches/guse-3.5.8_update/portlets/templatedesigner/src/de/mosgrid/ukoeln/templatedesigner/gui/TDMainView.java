package de.mosgrid.ukoeln.templatedesigner.gui;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TabSheet.Tab;
import com.vaadin.ui.VerticalLayout;

import de.mosgrid.ukoeln.templatedesigner.gui.templatetab.TDTemplateTab;

public class TDMainView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private TabSheet tsMainTabSheet;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = -835382253057328411L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TDMainView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		mainLayout.setHeight(TDMainWindow.MAINVIEW_HEIGHT);
		setHeight(TDMainWindow.MAINVIEW_HEIGHT);
		tsMainTabSheet.setHeight(TDMainWindow.MAINVIEW_HEIGHT);
	}

	public void addTab(TDInitialMinSizePanel<?> tab, boolean isClosable) {
		tsMainTabSheet.addTab(tab);
		tsMainTabSheet.getTab(tab).setClosable(isClosable);
		tsMainTabSheet.addListener(new ComponentDetachListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void componentDetachedFromContainer(ComponentDetachEvent event) {
				if (event.getDetachedComponent() instanceof TDInitialMinSizePanelBase)
					((TDInitialMinSizePanelBase) event.getDetachedComponent()).onClose();
			}
		});
	}
	
	public void removeTab(TDTemplateTab view) {
//		Tab tab = tsMainTabSheet.getTab(view);
		Tab tab = getTab(view);
		if (tab == null)
			return;
		tsMainTabSheet.removeTab(tab);
	}
	
	private Tab getTab(TDTemplateTab view) {
		for (int i = 0; i < tsMainTabSheet.getComponentCount(); i++) {
			Tab tab = tsMainTabSheet.getTab(i);
			if (tab.getComponent() instanceof TDInitialMinSizePanel<?>) {
				if (((TDInitialMinSizePanel<?>) tab.getComponent()).getWrapped() instanceof TDTemplateTab) {
					TDTemplateTab castTab = (TDTemplateTab) ((TDInitialMinSizePanel<?>) tab.getComponent()).getWrapped();
					if (castTab == view)
						return tab;
				}				
			}
		}
		return null;
	}

	public void refreshMainTab() {
		tsMainTabSheet.requestRepaint();
		tsMainTabSheet.requestRepaintRequests();
		for (int i = 0; i < tsMainTabSheet.getComponentCount(); i++) {
			tsMainTabSheet.getTab(i).getComponent().requestRepaint();
			tsMainTabSheet.getTab(i).getComponent().requestRepaintRequests();
		}
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100px");
		
		// tsMainTabSheet
		tsMainTabSheet = new TabSheet();
		tsMainTabSheet.setImmediate(true);
		tsMainTabSheet.setWidth("100.0%");
		tsMainTabSheet.setHeight("100px");
		mainLayout.addComponent(tsMainTabSheet);
		
		return mainLayout;
	}
}
