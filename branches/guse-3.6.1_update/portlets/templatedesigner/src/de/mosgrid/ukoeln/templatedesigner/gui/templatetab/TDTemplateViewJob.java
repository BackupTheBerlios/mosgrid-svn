package de.mosgrid.ukoeln.templatedesigner.gui.templatetab;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.AbstractLayout;
import com.vaadin.ui.Accordion;

import de.mosgrid.msml.util.wrapper.Job;
import de.mosgrid.ukoeln.templatedesigner.document.TDTemplateJobDocument;
import de.mosgrid.ukoeln.templatedesigner.gui.TDViewBase;

public class TDTemplateViewJob extends TDViewBase<TDTemplateJobDocument> {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Accordion accParts;
	private TDJobPartEnvironment envPart;
	private TDJobPartAdapter adapPart;
	private TDJobPartParameter paramPart;
	private TDJobPartMain mainPart;
	private TDJobPartParser parserPart;
	private TDJobPartUploads uploadPart;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 6635489294081947100L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TDTemplateViewJob() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		setSizeFull();
	}

	@Override
	protected void doInit() {

		mainPart = new TDJobPartMain();
		mainPart.init(getDoc());
		accParts.addTab(mainPart, "General Settings");
		
		if (!getDoc().hasValidJob())
			return;
		
		envPart = new TDJobPartEnvironment();
		envPart.init(getDoc());
		accParts.addTab(envPart, "Environment");

		adapPart = new TDJobPartAdapter();
		adapPart.init(getDoc());
		accParts.addTab(adapPart, "Adapter");
		
		paramPart = new TDJobPartParameter();
		paramPart.init(getDoc());
		accParts.addTab(paramPart, "Parameter");

		uploadPart = new TDJobPartUploads();
		uploadPart.init(getDoc());
		accParts.addTab(uploadPart, "Uploads");

		parserPart = new TDJobPartParser();
		parserPart.init(getDoc());
		accParts.addTab(parserPart, "Parser");
	}
	
	public TDJobPartAdapter getAdapterPart() {
		return adapPart;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// accParts
		accParts = new Accordion();
		accParts.setImmediate(false);
		accParts.setWidth("100.0%");
		accParts.setHeight("100.0%");
		mainLayout.addComponent(accParts, "top:0.0px;");

		return mainLayout;
	}

	@Override
	public AbstractLayout getMainLayout() {
		// TODO Auto-generated method stub
		return null;
	}

	public void refreshEnvironmentTable() {
		if (envPart != null)
			envPart.refreshEnvironmentTable();
	}

	public void refreshAdapterTable() {
		if (adapPart != null)
			adapPart.refreshAdapterTable();
	}
	
	public void refreshParameterTable() {
		if (paramPart != null)
			paramPart.refreshParameterTable();
	}
	
	public void refreshUploadTable() {
		if (uploadPart != null)
			uploadPart.refreshUploadTable();
	}

	@Override
	public String toString() {
		return getDoc().toString();
	}

	public void updateUnassignedJobs() {
		mainPart.updateUnassignedJob();
	}

	public Job getJob() {
		return getDoc().getJob();
	}
}
