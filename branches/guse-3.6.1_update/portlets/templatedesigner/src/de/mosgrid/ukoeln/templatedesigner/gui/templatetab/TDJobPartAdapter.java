package de.mosgrid.ukoeln.templatedesigner.gui.templatetab;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.AbstractLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.CheckBox;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import de.mosgrid.msml.util.IDictionary;
import de.mosgrid.ukoeln.templatedesigner.document.IPropertyBean;
import de.mosgrid.ukoeln.templatedesigner.document.PropertyBean;
import de.mosgrid.ukoeln.templatedesigner.document.TDTemplateJobDocument;
import de.mosgrid.ukoeln.templatedesigner.gui.TDViewBase;
import de.mosgrid.ukoeln.templatedesigner.gui.util.TDTableComponent;
import de.mosgrid.ukoeln.templatedesigner.gui.util.TDTableFieldFactory;

@SuppressWarnings("deprecation")
public class TDJobPartAdapter extends TDViewBase<TDTemplateJobDocument> {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private TDTableComponent tblParams;
	@AutoGenerated
	private GridLayout glMainInfo;
	@AutoGenerated
	private ComboBox cmbPort;
	@AutoGenerated
	private TextField txtExtension;
	@AutoGenerated
	private ComboBox cmbAdapID;
	@AutoGenerated
	private CheckBox chkHasAdap;

	private static final long serialVersionUID = 3844597982430879125L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public TDJobPartAdapter() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@Override
	public AbstractLayout getMainLayout() {
		return mainLayout;
	}

	@Override
	protected void doInit() {
		chkHasAdap.setPropertyDataSource(getDoc().getHasAdapProperty());
		chkHasAdap.addListener(new ValueChangeListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				updateHasAdap();
			}
		});

		cmbAdapID.setContainerDataSource(getDoc().getAdapterDictsDataSource());
		cmbAdapID.setPropertyDataSource(getDoc().getSelectedAdapterIDDataSource());
		cmbAdapID.setNullSelectionAllowed(false);
		cmbAdapID.addListener(new ValueChangeListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				updateTableAddButton();
			}
		});

		cmbPort.setContainerDataSource(getDoc().getPortDataSource());
		cmbPort.setPropertyDataSource(getDoc().getSelectedAdapterPortDataSource());
		cmbPort.setNullSelectionAllowed(false);
		cmbPort.setItemCaptionMode(ComboBox.ITEM_CAPTION_MODE_PROPERTY);
		cmbPort.setItemCaptionPropertyId("name");
		
		txtExtension.setPropertyDataSource(getDoc().getSelectedExtensionDataSource());

		initTable();
		updateHasAdap();
	}

	private void initTable() {
		tblParams.init(getDoc().getAdapterParamDataSource(), getDoc(), new Object[] { PropertyBean.INDEX_PROPID,
				PropertyBean.REF_PROPID, PropertyBean.VAL_PROPID, PropertyBean.EDIT_PROPID });

		tblParams.addRemoveListener(new ClickListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				getDoc().removeAdapParam((IPropertyBean) tblParams.getValue());
			}
		});

		tblParams.addAddListener(new ClickListener() {

			private static final long serialVersionUID = 1L;

			@Override
			public void buttonClick(ClickEvent event) {
				getDoc().addNewAdapProp();
			}
		});
		updateTableAddButton();
	}

	private void updateTableAddButton() {
		boolean addEnabled = getDoc().getPseudoAdapterDictionaryDataSource().size() > 0;
		tblParams.setAddButtonEnabled(addEnabled);
	}

	private void updateHasAdap() {
		Boolean enabled = (Boolean) chkHasAdap.getValue();
		cmbAdapID.setEnabled(enabled);
		cmbPort.setEnabled(enabled);
		txtExtension.setEnabled(enabled);
		tblParams.setEnabled(enabled);
	}

	public void refreshAdapterTable() {
		tblParams.refreshRowCache();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// glMainInfo
		glMainInfo = buildGlMainInfo();
		mainLayout.addComponent(glMainInfo);

		// tblParams
		tblParams = new TDTableComponentAdapImpl();
		tblParams.setImmediate(true);
		tblParams.setWidth("100.0%");
		tblParams.setHeight("100.0%");
		mainLayout.addComponent(tblParams);
		mainLayout.setExpandRatio(tblParams, 1.0f);

		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildGlMainInfo() {
		// common part: create layout
		glMainInfo = new GridLayout();
		glMainInfo.setImmediate(false);
		glMainInfo.setWidth("100.0%");
		glMainInfo.setHeight("-1px");
		glMainInfo.setMargin(false);
		glMainInfo.setSpacing(true);
		glMainInfo.setColumns(2);
		glMainInfo.setRows(3);

		// chkHasAdap
		chkHasAdap = new CheckBox();
		chkHasAdap.setCaption("Has Adapter");
		chkHasAdap.setImmediate(true);
		chkHasAdap.setWidth("-1px");
		chkHasAdap.setHeight("-1px");
		glMainInfo.addComponent(chkHasAdap, 0, 0);

		// cmbAdapID
		cmbAdapID = new ComboBox();
		cmbAdapID.setCaption("Adapter ID");
		cmbAdapID.setImmediate(true);
		cmbAdapID.setWidth("-1px");
		cmbAdapID.setHeight("-1px");
		glMainInfo.addComponent(cmbAdapID, 0, 1);

		// txtExtension
		txtExtension = new TextField();
		txtExtension.setCaption("File Extension");
		txtExtension.setImmediate(true);
		txtExtension.setWidth("-1px");
		txtExtension.setHeight("-1px");
		txtExtension.setSecret(false);
		glMainInfo.addComponent(txtExtension, 1, 1);

		// cmbPort
		cmbPort = new ComboBox();
		cmbPort.setCaption("Port");
		cmbPort.setImmediate(true);
		cmbPort.setWidth("-1px");
		cmbPort.setHeight("-1px");
		glMainInfo.addComponent(cmbPort, 0, 2);

		return glMainInfo;
	}

	@SuppressWarnings("serial")
	public class TDTableComponentAdapImpl extends TDTableComponent {

		@Override
		protected TableFieldFactory getTDTableFieldFactory(TDTemplateJobDocument doc) {
			return new TDTableFieldFactory(doc) {

				@Override
				protected BeanItemContainer<IDictionary> getInternalDictionaryDataSource(TDTemplateJobDocument doc) {
					return doc.getPseudoAdapterDictionaryDataSource();
				}

				@Override
				protected BeanItemContainer<String> getInternalDictRefDataSource(TDTemplateJobDocument doc,
						IDictionary dict) {
					return doc.getRefsToDict(dict);
				}
			};
		}
	}
}
