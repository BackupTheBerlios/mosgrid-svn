<?xml version="1.0" encoding="UTF-8"?>
<cml convention="convention:compchem"
    xmlns="http://www.xml-cml.org/schema"
    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
    xmlns:convention="http://www.xml-cml.org/convention/"
    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
    xmlns:g03="http://www.xml-cml.org/dictionary/qc-gaussian-03/"
    xmlns:g09="http://www.xml-cml.org/dictionary/qc-gaussian-09/"
    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
    xmlns:si="http://www.xml-cml.org/unit/si/"
    xmlns:units="http://www.xml-cml.org/units/units" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <module dictRef="compchem:jobList" id="G09OPT-1C3-BASE"
        cmlx:displayName="G09OPT-HF" cmlx:workflowNotes="2012-09-20" title="Optimization with HF methods">
        <module dictRef="compchem:job" id="G09OPT">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:large.cores" cmlx:editable="true">
                        <scalar dataType="xsd:integer" units="si:none">8</scalar>
                    </property>
                    <property dictRef="env:large.walltime" cmlx:editable="true">
                        <scalar dataType="xsd:integer" units="nonsi:min">3600</scalar>
                    </property>
                    <property dictRef="env:mediummem.memory" cmlx:editable="true">
                        <scalar dataType="xsd:integer" units="si:none">16000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="g09:loglevel">
                        <scalar dataType="xsd:string" units="si:none">p</scalar>
                    </parameter>
                    <parameter dictRef="g09:jobtype">
                        <scalar dataType="xsd:string" units="si:none">opt</scalar>
                    </parameter>
                    <parameter dictRef="g09:hf.theory" cmlx:editable="true">
                        <scalar dataType="xsd:string" units="si:none">hf</scalar>
                    </parameter>
                    <parameter dictRef="g09:basisset" cmlx:editable="true">
                        <scalar dataType="xsd:string" units="si:none">6-31G</scalar>
                    </parameter>
                    <parameter dictRef="g09:formal.charge" cmlx:editable="true">
                        <scalar dataType="xsd:integer" units="si:none">0</scalar>
                    </parameter>
                    <parameter dictRef="g09:spin" cmlx:editable="true">
                        <scalar dataType="xsd:integer" units="si:none">1</scalar>
                    </parameter>
                    <parameter dictRef="g09:checkpointfile">
                        <scalar dataType="xsd:string" units="si:none">job.chk</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="g09adap"
                    fileExtension="com" portName="job.com"/>
            </module>
            <description cmlx:plainText="Here you define all input needed for the optimisation.&#xa;You can specify a basisset and functional used for calculation. Furthermore you may specify the formal charge and spin of the molecule. At the bottom of the page you can input the structure of the molecule in Gaussian-format."/>
        </module>
        <module dictRef="compchem:job" id="FormChk">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.cores">
                        <scalar dataType="xsd:integer" units="si:none">1</scalar>
                    </property>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">60</scalar>
                    </property>
                    <property dictRef="env:medium.memory">
                        <scalar dataType="xsd:integer" units="si:none">2048</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="ChkChk">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.cores">
                        <scalar dataType="xsd:integer" units="si:none">1</scalar>
                    </property>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">60</scalar>
                    </property>
                    <property dictRef="env:medium.memory">
                        <scalar dataType="xsd:integer" units="si:none">2048</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="NewZMat">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.cores">
                        <scalar dataType="xsd:integer" units="si:none">1</scalar>
                    </property>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">60</scalar>
                    </property>
                    <property dictRef="env:medium.memory">
                        <scalar dataType="xsd:integer" units="si:none">2048</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <description cmlx:plainText="With this workflow you may calculate the structure for a molecule optimized for minimum energy."/>
    </module>
</cml>
