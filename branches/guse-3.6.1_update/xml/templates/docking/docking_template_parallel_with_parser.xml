<?xml version="1.0" encoding="UTF-8"?>
<cml convention="convention:compchem"
    xmlns="http://www.xml-cml.org/schema"
    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
    xmlns:convention="http://www.xml-cml.org/convention/"
    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
    xmlns:si="http://www.xml-cml.org/unit/si/"
    xmlns:units="http://www.xml-cml.org/units/units"
    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <module dictRef="compchem:jobList"
        id="ParallelDockingWorkflowWithParser_2012-10-19-133634"
        cmlx:displayName="CADDSuiteDockingWithParser"
        cmlx:workflowGraph="CADDSuiteDocking.png"
        cmlx:workflowNotes="No JSDL Information. MSML Parser will take the protein (from WaterFinder), the reference ligand (from PDBCutter), the scored ligands (from DockResultMerger) and the rescored ligands (from DockResultMerger2)" title="Docking using CADDSuite with Parser (Newbie Mode)">
        <cmlx:parserConfiguration>
            <parameter dictRef="parser:parserJobId">
                <scalar dataType="xsd:string">Parser01</scalar>
            </parameter>
            <parameter dictRef="parser:parserJobPort">
                <scalar dataType="xsd:string" units="si:none">MSML</scalar>
            </parameter>
        </cmlx:parserConfiguration>
        <description>
            <xhtml:p xmlns="http://www.xml-cml.org/schema"
                xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                xmlns:convention="http://www.xml-cml.org/convention/"
                xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                xmlns:si="http://www.xml-cml.org/unit/si/"
                xmlns:units="http://www.xml-cml.org/units/units"
                xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                This workflow performs a docking procedure of ligands into a protein. This version is simplified so that only minimal user input is needed and thus is aimed at the novice user. The actual docking process includes splitting of the receptor-file into protein and reference ligand, grid building, docking and rescoring of the dock results. For this workflow a protein structure file containing a protein in complex with a referenceligand and a file with the screening library (ligands) is required. 
		</xhtml:p>
        </description>
        <module dictRef="compchem:job" id="PDBCutter" title="PDB File containing the Protein and Reference Ligand">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	        The first important setting is the upload of the protein into wich the workflow should dock the ligands. This input needs to be a stucture in ProteinDataBank format (*.pdb) containing information about the protein and a referenceligand. 
		</xhtml:p>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		Furthermore name and the chain on which the referencligand can be found have to be specified. If the pdb-file contains only one structure, model 0 should be selected. In case of structures that were created by NMR-spectroscopy often several models exist. In this case only one of these models should be selected for the downstream process.
	        </xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:PDBCutter.RemChains"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:string"/>
                    </parameter>
                    <parameter dictRef="caddsuite:PDBCutter.RemResidues"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:string"/>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">docking/pdb-only\.xml</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
                <cmlx:uploadList>
                    <cmlx:moleculeUpload fileType="pdb" port="PORT0"/>
                </cmlx:uploadList>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="ProteinProtonator" title="ProteinProtonator">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:ph"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double">7.4</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="LigandFileSplitter" title="Ligand File for Docking">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		Secondly, a screening library has to be defined. This is done by uploading a file containing the 2-dimensional representation of ligand structures that shall be docked. The structures have to be provided in a sd file (*.sdf). 
		</xhtml:p>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		In the subsequent process some steps are parallelized which leads to the split of the file into several subfiles. This, however, does not affect the docking result, but only the runtime of the workflow.
	        </xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter
                        dictRef="caddsuite:LigandFileSplitter.Splits" cmlx:editable="false">
                        <scalar dataType="xsd:integer">3</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
                <cmlx:uploadList>
                    <cmlx:moleculeUpload fileType="sdf" port="PORT0"/>
                </cmlx:uploadList>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="LigandFileSplitter2" title="LigandFileSplitter Rescoring">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter
                        dictRef="caddsuite:LigandFileSplitter.Splits" cmlx:editable="false">
                        <scalar dataType="xsd:integer">3</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="Ligand3DGenerator1" title="Ligand3DGenerator">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:ph"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double">7.4</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="LigCheck1" title="LigCheck">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:LigCheck.error"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"/>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="DockResultMerger" title="Docking Results">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		Subsequent to the docking process the dockresults (i.e. the ligands with their assigned score) are sorted based on the docking score and thus their ability to bind to the protein. In this step it is possible to constrain the number of ligands that are docked again in a rescoring process to only the best k ligands. This option is however optional. If no K-value is selected, all ligands provided in the input sdf are moved on to the rescoring step.
                </xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:DockResultMerger.Min"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"/>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.Max"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"/>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.K"
                        cmlx:editable="true" cmlx:optional="true">
                        <scalar dataType="xsd:integer">100</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">docking/sdf-only\.xml</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="SimpleRescorer1" title="Simple Rescorer">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		Rescoring is a process to optimize docking output poses and evaluate the binding-free-energy using one of the scoring functions that can be selected in the menu.
		</xhtml:p>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
 The resulting ligand file will then contain a property 're-score' which contains the binding-free energy as it was determined by the scoring function. The three options are: PB = Poisson-Boltzman rescoring, MM = AMBER-based rescoring, and PLP = rescoring using pair wise linear potentials. 
                </xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter
                        dictRef="caddsuite:SimpleRescorer.Function" cmlx:editable="true">
                        <scalar dataType="xsd:string"/>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT1"/>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">120</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="DockResultMerger2" title="Rescoring Results">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		In a final step of the workflow the rescoring output poses are sorted again. If required, only the best k poses are kept in the output sd file. 
		</xhtml:p>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
		In general, the output file contains the ligands with 3-dimensional coordinates in a way that they fit as much as possible into the binding pocket of the target protein. The binding-free energy scores of the docking and rescoring process are appendend as properties at the end of each ligand entry in the sd file and can be identified by the names 'score' and 're-score'.
	        </xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:DockResultMerger.Min"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"/>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.Max"
                        cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"/>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.K"
                        cmlx:editable="true" cmlx:optional="true">
                        <scalar dataType="xsd:integer">100</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="PORT0"/>
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">docking/sdf-only\.xml</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="ConstraintsFinder">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="PocketDetector">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="GridBuilder">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">60</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="IMGDock1">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">180</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="ProteinCheck">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="WaterFinder">
            <module dictRef="compchem:initialization">
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">docking/pdb-only\.xml</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">500</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="Parser01">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">2000</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="Parser02">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">2000</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="Parser03">
            <module dictRef="compchem:initialization"/>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">2000</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="Parser04">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">2000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
    </module>
</cml>
