<?xml version="1.0" encoding="UTF-8"?>
<cml convention="convention:compchem"
    xmlns="http://www.xml-cml.org/schema"
    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
    xmlns:convention="http://www.xml-cml.org/convention/"
    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
    xmlns:gromacs="http://www.xml-cml.org/dictionary/md-input/"
    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
    xmlns:si="http://www.xml-cml.org/unit/si/"
    xmlns:units="http://www.xml-cml.org/units/units"
    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <module dictRef="compchem:jobList" id="GromacsEMWithParser"
        cmlx:displayName="EMWithParser"
        cmlx:workflowGraph="gromacsEM.png"
        cmlx:workflowNotes="18.10.2012 Gromacs Energy Minimization with three parserjobs to extract original and optimized structure together with potential and potentialplot." title="Energy Minimization with Parser">
        <description>
            <xhtml:p xmlns="http://www.xml-cml.org/schema"
                xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                xmlns:convention="http://www.xml-cml.org/convention/"
                xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                xmlns:gromacs="http://www.xml-cml.org/dictionary/md-input/"
                xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                xmlns:si="http://www.xml-cml.org/unit/si/"
                xmlns:units="http://www.xml-cml.org/units/units"
                xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                         This workflow performs a energy minimization of a protein with GROMACS. 
                        </xhtml:p>
        </description>
        <module dictRef="compchem:job" id="pdb2gmx01" title="System Preparation">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:gromacs="http://www.xml-cml.org/dictionary/md-input/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                        	This preprocessing step creates a toptology (*.top) file for your protein. After uploading you may have to select which part of the protein shall 
				be used as input. 
                        	</xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="gromacs:pdb2gmx.Forcefield" cmlx:editable="true">
                        <scalar dataType="xsd:string">oplsaa</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:pdb2gmx.Watermodel" cmlx:editable="true">
                        <scalar dataType="xsd:string">spc</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="Input.pdb"/>
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">\Qmd/pdb-only.xml\E</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
                <cmlx:uploadList>
                    <cmlx:moleculeUpload fileType="pdb" port="Input.pdb"/>
                </cmlx:uploadList>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">10</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="genbox03" title="Solvation">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="gromacs:genbox.Watermodel" cmlx:editable="false">
                        <scalar dataType="xsd:string">spc216.gro</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter" portName="BOX.pdb"/>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">15</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="grompp06" title="Precompiler">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:gromacs="http://www.xml-cml.org/dictionary/md-input/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                                The precompiler creates a run input file (*.tpr) for your job.
                        </xhtml:p>
            </description>
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="gromacs:grompp.NumberOfSteps" cmlx:editable="true">
                        <scalar dataType="xsd:integer">250</scalar>
                    </parameter>
                    <parameter
                        dictRef="gromacs:grompp.MinimizerAlgorithm" cmlx:editable="false">
                        <scalar dataType="xsd:string">steep</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:grompp.Min.Tolerance" cmlx:editable="false">
                        <scalar dataType="xsd:double">100.0</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:grompp.Min.Stepsize" cmlx:editable="false">
                        <scalar dataType="xsd:double">0.05</scalar>
                    </parameter>
                    <parameter
                        dictRef="gromacs:grompp.NSA.updateFrequency" cmlx:editable="false">
                        <scalar dataType="xsd:integer">1</scalar>
                    </parameter>
                    <parameter
                        dictRef="gromacs:grompp.NeighbourSearchingAlgorithm" cmlx:editable="false">
                        <scalar dataType="xsd:string">grid</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:grompp.NSA.radius" cmlx:editable="false">
                        <scalar dataType="xsd:double">1.0</scalar>
                    </parameter>
                    <parameter
                        dictRef="gromacs:grompp.ElectrostaticsAlgorithm" cmlx:editable="false">
                        <scalar dataType="xsd:string">PME</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:grompp.ESA.outerRadius" cmlx:editable="false">
                        <scalar dataType="xsd:double">1.0</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:grompp.VdWA.outerRadius" cmlx:editable="false">
                        <scalar dataType="xsd:double">1.0</scalar>
                    </parameter>
                    <parameter dictRef="gromacs:grompp.NSA.PBC" cmlx:editable="false">
                        <scalar dataType="xsd:string">xyz</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="mdadapter"
                    fileExtension="mdp" portName="steep.mdp"/>
            </module>
        </module>
        <module dictRef="compchem:job" id="grompp04" title="grompp">
            <module dictRef="compchem:initialization">
                <cmlx:adapterConfiguration adapterID="jobref"
                    fileExtension="mdp" portName="steep.mdp">
                    <parameter dictRef="adapter:jobref">
                        <scalar dataType="xsd:string">grompp06</scalar>
                    </parameter>
                </cmlx:adapterConfiguration>
            </module>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">30</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
        </module>
        <module dictRef="compchem:job" id="mdrun07" title="Energy Minimization">
            <description>
                <xhtml:p xmlns="http://www.xml-cml.org/schema"
                    xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref"
                    xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
                    xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/"
                    xmlns:convention="http://www.xml-cml.org/convention/"
                    xmlns:env="http://www.xml-cml.org/dictionary/environment/"
                    xmlns:gromacs="http://www.xml-cml.org/dictionary/md-input/"
                    xmlns:nonsi="http://www.xml-cml.org/unit/nonSi/"
                    xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
                    xmlns:si="http://www.xml-cml.org/unit/si/"
                    xmlns:units="http://www.xml-cml.org/units/units"
                    xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
                                This is the main MD application which performs the energy minimization.
                        </xhtml:p>
            </description>
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:medium.nodes" cmlx:editable="true">
                        <scalar dataType="xsd:integer">1</scalar>
                    </property>
                    <property dictRef="env:medium.cores" cmlx:editable="true">
                        <scalar dataType="xsd:integer">4</scalar>
                    </property>
                    <property dictRef="env:medium.walltime" cmlx:editable="true">
                        <scalar dataType="xsd:integer">240</scalar>
                    </property>
                    <property dictRef="env:medium.memory" cmlx:editable="true">
                        <scalar dataType="xsd:integer">1000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization">
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">\Qmd/pdb-only.xml\E</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
            </module>
        </module>
        <module dictRef="compchem:job" id="editconf02">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">30</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="genergy08">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">30</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization">
                <cmlx:parserConfiguration>
                    <parameter dictRef="parser:parserConfig">
                        <scalar dataType="xsd:string" units="si:none">\Qmd/xvg-potential-plot-and-last-potential-with-id-from-mdrun.xml\E</scalar>
                    </parameter>
                </cmlx:parserConfiguration>
            </module>
        </module>
        <module dictRef="compchem:job" id="xmgrace09">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">30</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="genion05">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.walltime">
                        <scalar dataType="xsd:integer" units="nonsi:min">60</scalar>
                    </property>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">1000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="Parser01">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">4000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="Parser02">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">4000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <module dictRef="compchem:job" id="Parser03">
            <module dictRef="compchem:environment">
                <propertyList>
                    <property dictRef="env:small.memory">
                        <scalar dataType="xsd:integer" units="si:none">4000</scalar>
                    </property>
                </propertyList>
            </module>
            <module dictRef="compchem:initialization"/>
        </module>
        <cmlx:parserConfiguration>
            <parameter dictRef="parser:parserJobId">
                <scalar dataType="xsd:string" units="si:none">Parser01</scalar>
            </parameter>
            <parameter dictRef="parser:parserJobPort">
                <scalar dataType="xsd:string" units="si:none">msml-template.xml</scalar>
            </parameter>
        </cmlx:parserConfiguration>
    </module>
</cml>
