<?xml version="1.0" encoding="UTF-8"?>
<cml 	convention="convention:compchem"
	xmlns="http://www.xml-cml.org/schema"
	xmlns:xhtml="http://www.w3.org/1999/xhtml"
	xmlns:convention="http://www.xml-cml.org/convention/"
	xmlns:units="http://www.xml-cml.org/units/units"
	xmlns:cmlx="http://www.xml-cml.org/schema/cmlx"
	xmlns:compchem="http://www.xml-cml.org/dictionary/compchem/" 
    	xmlns:caddsuite="http://www.xml-cml.org/dictionary/docking-input/"
	xmlns:parser="http://www.xml-cml.org/dictionary/parser/"
	xmlns:env="http://www.xml-cml.org/dictionary/environment/"
	xmlns:adapter="http://www.xml-cml.org/dictionary/adapter/jobref">
    
	<module title="Docking using CADDSuite (Newbie Mode) alt" 
		id="StandardDockingWorkflow2_2012-07-04-114427" 
		dictRef="compchem:jobList" 
		cmlx:workflowNotes="Funktonierender StandardDockingWorkflow fur das DockingPortlet"
		cmlx:displayName="StdDockingWkf">
        
		
	<!-- By now there is no parser job configured in the workflow, thus msml won't be passed into workflow-->
        <!--<cmlx:parserConfiguration>
         <parameterList>
         <parameter dictRef="parser:parserJobId">
         <scalar dataType="xsd:string">parser01</scalar>
         </parameter>
         <parameter dictRef="parser:parserJobPort">
         <scalar dataType="xsd:integer">0</scalar>
         </parameter>
         </parameterList>
         </cmlx:parserConfiguration>-->
		
	<module title="PDB File containing the Protein and Reference Ligand" id="PDBCutter" dictRef="compchem:job">
		 <description>
                	 <xhtml:p>
                                This is a 
				description
				which will be shown as single line
                         </xhtml:p>
                </description>
		<module dictRef="compchem:initialization">
			<cmlx:uploadList>
				<cmlx:moleculeUpload fileType="pdb" port="PORT0"></cmlx:moleculeUpload >
			</cmlx:uploadList>
			<parameterList>
				<parameter dictRef="caddsuite:PDBCutter.RemChains" cmlx:editable="false" cmlx:optional="true">
					<scalar dataType="xsd:string"></scalar>
				</parameter>
				<parameter dictRef="caddsuite:PDBCutter.RemResidues" cmlx:editable="false" cmlx:optional="true">
					<scalar dataType="xsd:string"></scalar>
				</parameter>
			</parameterList>
	
			<!--The given init parameters above are set to PDBCutter as flags -->
			<cmlx:adapterConfiguration adapterID="cmdadapter"/>
		</module>
	</module>
        
	<module title="ProteinProtonator" id="ProteinProtonator" dictRef="compchem:job">
		<module dictRef="compchem:initialization">
			<parameterList>
				<parameter dictRef="caddsuite:ph" cmlx:editable="false" cmlx:optional="true">
					<scalar dataType="xsd:double">7.0</scalar>
				</parameter>
			</parameterList>
		<!-- ph shall be the same for ProteinProtonator & Ligand3DGenerator -->
			<cmlx:adapterConfiguration adapterID="cmdadapter"/>					
		</module>
	</module>
            
        <module title="Ligand File for Docking" id="LigandFileSplitter" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <cmlx:uploadList>
			<cmlx:moleculeUpload fileType="sdf" port="PORT0"></cmlx:moleculeUpload >
		</cmlx:uploadList>
                <parameterList>
                    <parameter dictRef="caddsuite:LigandFileSplitter.Splits" cmlx:editable="false">
                        <scalar dataType="xsd:integer">3</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module>
        
        <module title="LigandFileSplitter Rescoring" id="LigandFileSplitter2" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:LigandFileSplitter.Splits" cmlx:editable="false">
                        <scalar dataType="xsd:integer">3</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module>
        
	<module title="Ligand3DGenerator" id="Ligand3DGenerator1" dictRef="compchem:job">
		<module dictRef="compchem:initialization">
			<parameterList>
				<parameter dictRef="caddsuite:ph" cmlx:editable="false" cmlx:optional="true">
					<scalar dataType="xsd:double">7.0</scalar>
				</parameter>
			</parameterList>      
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module><!-- x3 -->
        <module title="Ligand3DGenerator" id="Ligand3DGenerator2" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
		<cmlx:adapterConfiguration adapterID="jobref">
			<parameter dictRef="adapter:jobref">
				<scalar dataType="xsd:string">Ligand3DGenerator1</scalar>
			</parameter>
		</cmlx:adapterConfiguration>				
            </module>
        </module>
        <module title="Ligand3DGenerator" id="Ligand3DGenerator3" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <cmlx:adapterConfiguration adapterID="jobref">
			<parameter dictRef="adapter:jobref">
				<scalar dataType="xsd:string">Ligand3DGenerator1</scalar>
			</parameter>
		</cmlx:adapterConfiguration>							
            </module>
        </module>
        
        <module title="LigCheck" id="LigCheck1" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:LigCheck.error" cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"></scalar>
                    </parameter>
                    <!-- should be the same input for all 3 nodes -->
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module>
        <module title="LigCheck" id="LigCheck2" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <cmlx:adapterConfiguration adapterID="jobref">
			<parameter dictRef="adapter:jobref">
				<scalar dataType="xsd:string">LigCheck1</scalar>
			</parameter>
		</cmlx:adapterConfiguration>						
            </module>
        </module>
        <module title="LigCheck" id="LigCheck3" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <cmlx:adapterConfiguration adapterID="jobref">
			<parameter dictRef="adapter:jobref">
				<scalar dataType="xsd:string">LigCheck1</scalar>
			</parameter>
		</cmlx:adapterConfiguration>								
            </module>
        </module>
        
        <module title="Docking Results" id="DockResultMerger" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:DockResultMerger.Min" cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"></scalar>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.Max" cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"></scalar>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.K" cmlx:editable="true" cmlx:optional="true">
                        <scalar dataType="xsd:integer">100</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module>
        
        <module title="Simple Rescorer" id="SimpleRescorer" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:SimpleRescorer.Function" cmlx:editable="true">
                        <scalar dataType="xsd:string"></scalar>
                    </parameter>
                    <!-- should be the same input for all 3 nodes -->
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module>
        <module title="SimpleRescorer" id="SimpleRescorer1" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <cmlx:adapterConfiguration adapterID="jobref">
					<parameter dictRef="adapter:jobref">
						<scalar dataType="xsd:string">SimpleRescorer</scalar>
					</parameter>
				</cmlx:adapterConfiguration>							
            </module>
        </module>
        <module title="SimpleRescorer" id="SimpleRescorer2" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
				<cmlx:adapterConfiguration adapterID="jobref">
					<parameter dictRef="adapter:jobref">
						<scalar dataType="xsd:string">SimpleRescorer</scalar>
					</parameter>
				</cmlx:adapterConfiguration>		
            </module>
        </module>
        
        <module title="Rescoring Results" id="DockResultMerger2" dictRef="compchem:job">
            <module dictRef="compchem:initialization">
                <parameterList>
                    <parameter dictRef="caddsuite:DockResultMerger.Min" cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"></scalar>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.Max" cmlx:editable="false" cmlx:optional="true">
                        <scalar dataType="xsd:double"></scalar>
                    </parameter>
                    <parameter dictRef="caddsuite:DockResultMerger.K" cmlx:editable="true" cmlx:optional="true">
                        <scalar dataType="xsd:integer">100</scalar>
                    </parameter>
                </parameterList>
                <cmlx:adapterConfiguration adapterID="cmdadapter"/>					
            </module>
        </module>
    </module>
</cml> 
